@page "/survey"
@using SmartPhoneAdvisor.Models
@using SmartPhoneAdvisor.Services
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject UserState UserState

<h3 class="text-center mt-4">üìã Kh·∫£o s√°t nhu c·∫ßu s·ª≠ d·ª•ng ƒëi·ªán tho·∫°i</h3>

<div class="container mt-4">
    <div class="card shadow border-primary">
        <div class="card-body">
            <EditForm Model="userInput" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Gi·ªõi t√≠nh</label><br />
                    <InputRadioGroup @bind-Value="userInput.Gender">
                        <InputRadio class="form-check-input" Value="Nam" /> Nam
                        <InputRadio class="form-check-input ms-3" Value="Nu" /> N·ªØ
                    </InputRadioGroup>
                </div>

                <div class="mb-3">
                    <label class="form-label">ƒê·ªô tu·ªïi</label>
                    <InputSelect class="form-select" @bind-Value="userInput.AgeGroup">
                        <option value="">-- Ch·ªçn ƒë·ªô tu·ªïi --</option>
                        <option value="< 18">D∆∞·ªõi 18</option>
                        <option value="18-25">18 - 25</option>
                        <option value="26-35">26 - 35</option>
                        <option value="36-50">36 - 50</option>
                        <option value="> 50">Tr√™n 50</option>
                    </InputSelect>
                </div>

                <div class="mb-3">
                    <label class="form-label">Ng√¢n s√°ch</label>
                    <InputSelect class="form-select" @bind-Value="userInput.Budget">
                        <option value="">-- Ch·ªçn m·ª©c gi√° --</option>
                        <option value="d∆∞·ªõi 3 tri·ªáu">D∆∞·ªõi 3 tri·ªáu</option>
                        <option value="3-5 tri·ªáu">3 - 5 tri·ªáu</option>
                        <option value="5-10 tri·ªáu">5 - 10 tri·ªáu</option>
                        <option value="10-15 tri·ªáu">10 - 15 tri·ªáu</option>
                        <option value="tr√™n 15 tri·ªáu">Tr√™n 15 tri·ªáu</option>
                    </InputSelect>
                </div>

                <div class="mb-3">
                    <label class="form-label">Nhu c·∫ßu s·ª≠ d·ª•ng</label><br />
                    @foreach (var nhuCau in NhuCauOptions)
                    {
                        <div class="form-check form-check-inline">
                            <input type="checkbox" class="form-check-input"
                                   @onchange="e => ToggleNeed(nhuCau, e.Value?.ToString())"
                                   checked="@userInput.Needs.Contains(nhuCau)" />
                            <label class="form-check-label">@nhuCau</label>
                        </div>
                    }
                </div>

                <div class="mb-3">
                    <label class="form-label">M√†u s·∫Øc y√™u th√≠ch</label>
                    <InputSelect class="form-select" @bind-Value="userInput.Color">
                        <option value="">-- Ch·ªçn m√†u s·∫Øc --</option>
                        <option value="ƒëen">ƒêen</option>
                        <option value="tr·∫Øng">Tr·∫Øng</option>
                        <option value="h·ªìng">H·ªìng</option>
                        <option value="xanh">Xanh</option>
                        <option value="v√†ng">V√†ng</option>
                    </InputSelect>
                </div>

                <div class="mb-3">
                    <label class="form-label">Th∆∞∆°ng hi·ªáu y√™u th√≠ch</label>
                    <InputSelect class="form-select" @bind-Value="userInput.Brand">
                        <option value="">-- Ch·ªçn th∆∞∆°ng hi·ªáu --</option>
                        <option value="Apple">Apple</option>
                        <option value="Samsung">Samsung</option>
                        <option value="Xiaomi">Xiaomi</option>
                        <option value="OPPO">OPPO</option>
                        <option value="Vivo">Vivo</option>
                        <option value="Realme">Realme</option>
                    </InputSelect>
                </div>

                <div class="mb-3">
                    <label class="form-label">üîç Ch·ªçn thu·∫≠t to√°n suy di·ªÖn</label>
                    <InputSelect class="form-select" @bind-Value="userInput.InferenceMethod">
                        <option value="Rule">Suy di·ªÖn theo lu·∫≠t</option>
                        <option value="DecisionTree">H·ªçc m√°y (Decision Tree)</option>
                        <option value="BFS">T√¨m ki·∫øm BFS</option>
                    </InputSelect>
                </div>

                <button type="submit" class="btn btn-primary w-100">T∆∞ v·∫•n ngay</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private string Nam = "Nam";
    private string Nu = "N·ªØ";
    private UserInput userInput = new();
    private List<string> NhuCauOptions = new()
    {
        "ch∆°i game", "ch∆°i game n·∫∑ng", "h·ªçc t·∫≠p", "online learning", "ch·ª•p ·∫£nh", "g·ªçi ƒëi·ªán",
        "gi·∫£i tr√≠", "c√¥ng vi·ªác", "pin tr√¢u", "camera ƒë·∫πp", "b·∫£o m·∫≠t cao", "b·ªÅn b·ªâ", "d·ªÖ s·ª≠ d·ª•ng"
    };

    private void ToggleNeed(string need, string? changed)
    {
        if (userInput.Needs.Contains(need))
            userInput.Needs.Remove(need);
        else
            userInput.Needs.Add(need);
    }

    private Task HandleSubmit()
    {
      UserState.CurrentInput = userInput;
      Navigation.NavigateTo("/result");
      return Task.CompletedTask;
    }
}